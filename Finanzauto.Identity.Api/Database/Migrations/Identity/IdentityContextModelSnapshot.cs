// <auto-generated />
using System;
using Finanzauto.Identity.Api.Database.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finanzauto.Identity.Api.Database.Migrations.Identity
{
    [DbContext(typeof(IdentityContext))]
    partial class IdentityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finanzauto.Core.Persistence.SqlServer.Configuration.Entities.DbConfigurationSection", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppSettings", "conf");

                    b.HasData(
                        new
                        {
                            Id = "OtpSettings:AlloweCharacters",
                            IsDeleted = false,
                            Value = "0123456789ABCDEFGHIJKLMNOPQRSTUVXYZ"
                        },
                        new
                        {
                            Id = "OtpSettings:OtpExpiration",
                            IsDeleted = false,
                            Value = "00:10:00"
                        },
                        new
                        {
                            Id = "OtpSettings:OtpLength",
                            IsDeleted = false,
                            Value = "8"
                        },
                        new
                        {
                            Id = "JsonWebTokenSettings:RefreshTokenExpirationTime",
                            IsDeleted = false,
                            Value = "03:00:00"
                        },
                        new
                        {
                            Id = "JsonWebTokenSettings:TokenExpirationTime",
                            IsDeleted = false,
                            Value = "01:00:00"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:0",
                            IsDeleted = false,
                            Value = "!"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:1",
                            IsDeleted = false,
                            Value = "#"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:10",
                            IsDeleted = false,
                            Value = "¡"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:11",
                            IsDeleted = false,
                            Value = "*"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:12",
                            IsDeleted = false,
                            Value = "+"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:13",
                            IsDeleted = false,
                            Value = "-"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:14",
                            IsDeleted = false,
                            Value = "_"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:15",
                            IsDeleted = false,
                            Value = "."
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:16",
                            IsDeleted = false,
                            Value = ":"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:17",
                            IsDeleted = false,
                            Value = ","
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:18",
                            IsDeleted = false,
                            Value = ";"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:19",
                            IsDeleted = false,
                            Value = "{"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:2",
                            IsDeleted = false,
                            Value = "$"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:20",
                            IsDeleted = false,
                            Value = "}"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:21",
                            IsDeleted = false,
                            Value = "["
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:22",
                            IsDeleted = false,
                            Value = "]"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:23",
                            IsDeleted = false,
                            Value = "~"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:24",
                            IsDeleted = false,
                            Value = "\\"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:3",
                            IsDeleted = false,
                            Value = "%"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:4",
                            IsDeleted = false,
                            Value = "&"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:5",
                            IsDeleted = false,
                            Value = "/"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:6",
                            IsDeleted = false,
                            Value = "("
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:7",
                            IsDeleted = false,
                            Value = ")"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:8",
                            IsDeleted = false,
                            Value = "="
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:AlloWedCharacters:9",
                            IsDeleted = false,
                            Value = "?"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:MinimunLength",
                            IsDeleted = false,
                            Value = "10"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:RequiresLowerCase",
                            IsDeleted = false,
                            Value = "True"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:RequiresNumbers",
                            IsDeleted = false,
                            Value = "True"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:RequiresSpecialCharacters",
                            IsDeleted = false,
                            Value = "False"
                        },
                        new
                        {
                            Id = "PasswordGenerationSettings:RequiresUpperCase",
                            IsDeleted = false,
                            Value = "True"
                        },
                        new
                        {
                            Id = "DomainAuthenticationSettings:BaseUrl",
                            IsDeleted = false,
                            Value = "http://www.qdatacolombia.com/Services/ServiciosApi/ServiceAutenticacionLDAP"
                        });
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.ApiKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<byte[]>("ApiKeyHash")
                        .IsRequired()
                        .HasColumnType("varbinary(900)");

                    b.Property<byte[]>("ApiKeySalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("AppId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Consumer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRoot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApiKeyHash")
                        .IsUnique();

                    b.HasIndex("AppId", "Consumer")
                        .IsUnique();

                    b.ToTable("ApiKeys", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.DomainCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("LoginConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LoginExpiresAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("LoginTypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("LoginTypeId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserName", "LoginTypeId")
                        .IsUnique();

                    b.ToTable("DomainCredentials", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.SingleCredential", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId", "AppId");

                    b.HasIndex("AppId", "UserName")
                        .IsUnique();

                    b.ToTable("SingleCredentials", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "sec");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.ApiKeyClaim", b =>
                {
                    b.Property<Guid>("ApiKeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ApiKeyId", "ClaimValueId");

                    b.HasIndex("ClaimValueId");

                    b.ToTable("ApiKeyClaims", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.RoleClaim", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "ClaimValueId");

                    b.HasIndex("ClaimValueId");

                    b.ToTable("RoleClaims", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.RoleRoute", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "RouteId");

                    b.HasIndex("RouteId");

                    b.ToTable("RoleRoute", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.UserClaim", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClaimValueId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ClaimValueId", "AppId");

                    b.HasIndex("AppId");

                    b.HasIndex("ClaimValueId");

                    b.ToTable("UserClaims", "auth");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimActions", "sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Permisos relacionados al control de usuarios",
                            IsDeleted = false,
                            Name = "users"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Permisos relacionados al control de roles",
                            IsDeleted = false,
                            Name = "roles"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Permisos relacionados al control de rutas",
                            IsDeleted = false,
                            Name = "routes"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Permisos relacionados al control de api keys",
                            IsDeleted = false,
                            Name = "apikeys"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Permisos relacionados al control de credenciales",
                            IsDeleted = false,
                            Name = "credentials"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Permisos relacionados al control de aplicaciones",
                            IsDeleted = false,
                            Name = "apps"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Permisos relacionados al control de endpoints de orden superior",
                            IsDeleted = false,
                            Name = "endpoints"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Permisos relacionados al control de llamadas",
                            IsDeleted = false,
                            Name = "calls"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Permisos relacionados al control de ajustes del sistema",
                            IsDeleted = false,
                            Name = "config"
                        });
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimSection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimSections", "sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Permisos relacionados a la lectura de datos",
                            IsDeleted = false,
                            Name = "read"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Permisos relacionados a la creaci�n de datos",
                            IsDeleted = false,
                            Name = "create"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Permisos relacionados a la modificaci�n de datos",
                            IsDeleted = false,
                            Name = "modify"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Permisos relacionados a la eliminaci�n de datos",
                            IsDeleted = false,
                            Name = "delete"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Permisos relacionados a la escucha de grabaciones",
                            IsDeleted = false,
                            Name = "listen"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Permisos relacionados a la descarga de datos",
                            IsDeleted = false,
                            Name = "download"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Permisos relacionados al acceso a datos de seguridad",
                            IsDeleted = false,
                            Name = "security"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Permisos relacionados a la carga de datos",
                            IsDeleted = false,
                            Name = "upload"
                        });
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("ClaimActionId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClaimSectionId");

                    b.HasIndex("ClaimActionId", "ClaimSectionId")
                        .IsUnique();

                    b.ToTable("ClaimValues", "sec");

                    b.HasData(
                        new
                        {
                            Id = new Guid("192140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("222140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2b2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("342140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3d2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("462140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4f2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("582140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 1,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1a2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("232140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2c2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("352140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3e2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("472140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("502140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("592140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 2,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1b2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("242140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2d2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("362140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3f2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("482140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("512140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5a2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 3,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1c2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("252140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2e2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("372140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("402140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("492140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("522140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5b2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 4,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1d2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("262140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2f2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("382140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("412140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4a2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("532140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5c2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 5,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1e2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("272140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("302140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("392140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("422140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4b2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("542140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5d2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 6,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("1f2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("282140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("312140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3a2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("432140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4c2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("552140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5e2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 7,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("202140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("292140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("322140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3b2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("442140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4d2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("562140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("5f2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 8,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("212140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 1,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("2a2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 2,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("332140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 3,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("3c2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 4,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("452140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 5,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("4e2140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 6,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("572140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 7,
                            IsDeleted = false
                        },
                        new
                        {
                            Id = new Guid("602140f7-3167-f011-81dc-00505682eca9"),
                            ClaimActionId = 9,
                            ClaimSectionId = 8,
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("AppIndex")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("MultiDomainEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("RootApplicationEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("AppIndex")
                        .IsUnique();

                    b.HasIndex("ApplicationName")
                        .IsUnique();

                    b.HasIndex("DomainName")
                        .IsUnique()
                        .HasFilter("[DomainName] IS NOT NULL");

                    b.HasIndex("Prefix")
                        .IsUnique();

                    b.ToTable("Apps", "conf");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.AppSafety", b =>
                {
                    b.Property<Guid>("AppId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("ExpirationTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("time")
                        .HasDefaultValue(new TimeSpan(0, 2, 0, 0, 0));

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("RefreshExpirationTime")
                        .HasColumnType("time");

                    b.Property<byte[]>("SignautreKey")
                        .IsRequired()
                        .HasColumnType("varbinary(900)");

                    b.HasKey("AppId");

                    b.HasIndex("SignautreKey")
                        .IsUnique();

                    b.ToTable("AppSafety", "conf");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.LoginApp", b =>
                {
                    b.Property<Guid>("AppId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("LoginTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AppId", "LoginTypeId");

                    b.HasIndex("LoginTypeId");

                    b.ToTable("LoginApps", "conf");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.LoginType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthenticationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoginTypes", "sec");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthenticationType = 2,
                            Description = "Login using a FZCORP credential",
                            DomainName = "FZCORP",
                            IsDeleted = false,
                            Key = "KdNESJeIadQ+U+Q5Qs+8BQ==",
                            Name = "Finanzauto"
                        },
                        new
                        {
                            Id = 2,
                            AuthenticationType = 2,
                            Description = "Login using a QBTA credential",
                            DomainName = "QBTA",
                            IsDeleted = false,
                            Key = "KdNESJeIadQ+U+Q5Qs+8BQ==",
                            Name = "Quantum Data"
                        },
                        new
                        {
                            Id = 3,
                            AuthenticationType = 2,
                            Description = "Login using a PTSEGUROS credential",
                            DomainName = "PTSEGUROS",
                            IsDeleted = false,
                            Key = "KdNESJeIadQ+U+Q5Qs+8BQ==",
                            Name = "Promotec"
                        },
                        new
                        {
                            Id = 4,
                            AuthenticationType = 2,
                            Description = "Login using a FZCORP credential",
                            DomainName = "FZCORP",
                            IsDeleted = false,
                            Key = "KdNESJeIadQ+U+Q5Qs+8BQ==",
                            Name = "Control Next"
                        },
                        new
                        {
                            Id = 5,
                            AuthenticationType = 2,
                            Description = "Login using a ASISYA credential",
                            DomainName = "FZCORP",
                            IsDeleted = false,
                            Key = "SWJF7E+6Grf63Co9Djy2Jw==",
                            Name = "Asisya"
                        },
                        new
                        {
                            Id = 6,
                            AuthenticationType = 1,
                            Description = "Login using a user and password",
                            IsDeleted = false,
                            Name = "User-Password"
                        });
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExcludeNav")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UrlImg")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Path", "Component")
                        .IsUnique();

                    b.ToTable("Routes", "conf");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderEndpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("RequiresSecondAuthLayer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("RequiresThirdAuthLayer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Method", "Route")
                        .IsUnique();

                    b.ToTable("HigherOrderEndpoints", "sec");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderEndpointOrigin", b =>
                {
                    b.Property<Guid>("EndpointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KeyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EndpointId", "KeyId");

                    b.HasIndex("KeyId");

                    b.ToTable("HigherOrderEndpointOrigins", "sec");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderKey", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("SignatureKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("HigherOrderOrigins", "sec");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.ContactInfo", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique()
                        .HasFilter("[PhoneNumber] IS NOT NULL");

                    b.ToTable("ContactInfo", "id");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<Guid>("AppId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomainName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRoot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AppId");

                    b.ToTable("Roles", "id");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime?>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DocumentNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentTypeId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecondLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecondName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocumentTypeId", "DocumentNumber")
                        .IsUnique()
                        .HasFilter("[DocumentTypeId] IS NOT NULL AND [DocumentNumber] IS NOT NULL");

                    b.ToTable("Users", "id");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.ApiKey", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", "App")
                        .WithMany("ApiKeys")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.DomainCredential", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.LoginType", "LoginType")
                        .WithMany("Credentials")
                        .HasForeignKey("LoginTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.User", "User")
                        .WithMany("Credentials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoginType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.SingleCredential", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", "Application")
                        .WithMany("SingleCredentials")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.User", "User")
                        .WithMany("SingleCredentials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.UserRole", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.Role", "Role")
                        .WithMany("AsignedUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.User", "User")
                        .WithMany("AsignedRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.ApiKeyClaim", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Authentication.ApiKey", "ApiKey")
                        .WithMany("Claims")
                        .HasForeignKey("ApiKeyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimValue", "ClaimValue")
                        .WithMany("ApiKeys")
                        .HasForeignKey("ClaimValueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ApiKey");

                    b.Navigation("ClaimValue");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.RoleClaim", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimValue", "ClaimValue")
                        .WithMany("Roles")
                        .HasForeignKey("ClaimValueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.Role", "Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ClaimValue");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.RoleRoute", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.Role", "Role")
                        .WithMany("Routes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.Route", "Route")
                        .WithMany("Roles")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authorization.UserClaim", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", "App")
                        .WithMany("UserClaims")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimValue", "ClaimValue")
                        .WithMany("Users")
                        .HasForeignKey("ClaimValueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("App");

                    b.Navigation("ClaimValue");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimValue", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimAction", "ClaimAction")
                        .WithMany("Sections")
                        .HasForeignKey("ClaimActionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimSection", "ClaimSection")
                        .WithMany("Actions")
                        .HasForeignKey("ClaimSectionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ClaimAction");

                    b.Navigation("ClaimSection");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.AppSafety", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", "App")
                        .WithOne("Safety")
                        .HasForeignKey("Finanzauto.Identity.Api.Domain.Entities.Configuration.AppSafety", "AppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.LoginApp", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", "App")
                        .WithMany("AllowedLogins")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.LoginType", "LoginType")
                        .WithMany("AllowedApps")
                        .HasForeignKey("LoginTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("App");

                    b.Navigation("LoginType");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderEndpointOrigin", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderEndpoint", "Endpoint")
                        .WithMany("AlloweOrigins")
                        .HasForeignKey("EndpointId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderKey", "Key")
                        .WithMany("AllowedEndpoints")
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Endpoint");

                    b.Navigation("Key");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.ContactInfo", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Identity.User", "User")
                        .WithOne("ContactInfo")
                        .HasForeignKey("Finanzauto.Identity.Api.Domain.Entities.Identity.ContactInfo", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.Role", b =>
                {
                    b.HasOne("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", "App")
                        .WithMany("Roles")
                        .HasForeignKey("AppId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("App");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Authentication.ApiKey", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimAction", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimSection", b =>
                {
                    b.Navigation("Actions");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Claims.ClaimValue", b =>
                {
                    b.Navigation("ApiKeys");

                    b.Navigation("Roles");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.App", b =>
                {
                    b.Navigation("AllowedLogins");

                    b.Navigation("ApiKeys");

                    b.Navigation("Roles");

                    b.Navigation("Safety")
                        .IsRequired();

                    b.Navigation("SingleCredentials");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.LoginType", b =>
                {
                    b.Navigation("AllowedApps");

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Configuration.Route", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderEndpoint", b =>
                {
                    b.Navigation("AlloweOrigins");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.HigherOrder.HigherOrderKey", b =>
                {
                    b.Navigation("AllowedEndpoints");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.Role", b =>
                {
                    b.Navigation("AsignedUsers");

                    b.Navigation("Claims");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("Finanzauto.Identity.Api.Domain.Entities.Identity.User", b =>
                {
                    b.Navigation("AsignedRoles");

                    b.Navigation("Claims");

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("Credentials");

                    b.Navigation("SingleCredentials");
                });
#pragma warning restore 612, 618
        }
    }
}
