// <auto-generated />
using System;
using Fz.Identity.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fz.Identity.Api.Database.Migrations
{
    [DbContext(typeof(IdentityContext))]
    [Migration("20250404154626_routes_claims_v1")]
    partial class routes_claims_v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.AllowedCredential", b =>
                {
                    b.Property<int>("CredentialTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.HasKey("CredentialTypeId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("AllowedCredentials", "conf");

                    b.HasData(
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 1
                        },
                        new
                        {
                            CredentialTypeId = 3,
                            ApplicationId = 1
                        },
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 2
                        },
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 3
                        },
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 4
                        },
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 5
                        },
                        new
                        {
                            CredentialTypeId = 3,
                            ApplicationId = 5
                        },
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 6
                        },
                        new
                        {
                            CredentialTypeId = 1,
                            ApplicationId = 7
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Application", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Applications", "conf");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Central de identidad del grupo atenea",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Atenea Identity"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Aplicación principal de Atenea",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Atenea Iris"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Atenea para Asisya",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Atenea Asisya"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Atenea para Promotec",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Atenea Promotec"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Central de datos de telefonía",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Atenea Asterisk"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Sistema de Créditos Vehiculares",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Oriana"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Sistema de financiación de seguros",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Finanzaseguros"
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Claim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CalimTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("CalimTypeId", "Value")
                        .IsUnique();

                    b.ToTable("Claims", "auth");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CalimTypeId = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ver detalle clientes",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Value = "clients:view"
                        },
                        new
                        {
                            Id = 2,
                            CalimTypeId = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ver detalle creditos",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Value = "credits:view"
                        },
                        new
                        {
                            Id = 3,
                            CalimTypeId = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Radicar creditos creditos",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Value = "credits:create"
                        },
                        new
                        {
                            Id = 4,
                            CalimTypeId = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Actualizar creditos",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Value = "credits:update"
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.ClaimType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimTypes", "conf");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Claim para el acceso a un permiso especifico de la aplicación",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Permission"
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Credential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<bool>("CredentialConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("CredentialEndUtc")
                        .HasColumnType("datetime2");

                    b.Property<int>("CredentialTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CredentialValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CredentialTypeId");

                    b.HasIndex("CredentialValue")
                        .IsUnique();

                    b.HasIndex("UserId", "CredentialTypeId")
                        .IsUnique();

                    b.ToTable("Credentials", "auth");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"jhon.cubillos\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("5ea12c28-b655-41e6-be6c-ed56c781d30b")
                        },
                        new
                        {
                            Id = 2,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 2,
                            CredentialValue = "{\"Username\":\"JCubillos\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("5ea12c28-b655-41e6-be6c-ed56c781d30b")
                        },
                        new
                        {
                            Id = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"christian.chilatra\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("aa6a6abd-4c02-45ee-92e4-9ad4cc31169c")
                        },
                        new
                        {
                            Id = 4,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"jesus.perez\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("f465489e-f743-40c2-8585-3ebdc982ac5e")
                        },
                        new
                        {
                            Id = 5,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"laura.roa\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("8d7e4c06-16d7-4448-b145-bda5f1af0776")
                        },
                        new
                        {
                            Id = 6,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"jose.bernal\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("e81ccb87-d2e0-4609-8d0b-63989625c7e9")
                        },
                        new
                        {
                            Id = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"darcy.novoa\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("3181c2ed-7454-4c71-99a9-0797daa0f32d")
                        },
                        new
                        {
                            Id = 8,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"elizabeth.gamba\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("71e13750-87bb-40a7-bb93-58e8f603b1a7")
                        },
                        new
                        {
                            Id = 9,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"carlos.molano\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("134ab661-2928-44e8-9e0c-b96d70e8164c")
                        },
                        new
                        {
                            Id = 10,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"monica.infante\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("d7d52b73-842a-4e8f-a090-f5c4a22fe625")
                        },
                        new
                        {
                            Id = 11,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"jeymmy.camelo\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("aae0504e-8145-461f-a7ab-9f9621e387d6")
                        },
                        new
                        {
                            Id = 12,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            CredentialConfirmed = false,
                            CredentialTypeId = 1,
                            CredentialValue = "{\"Username\":\"johanna.riano\"}",
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            TwoFactorEnabled = false,
                            UserId = new Guid("0622f38d-f7c9-41a2-9b80-7f77ea6ba7d7")
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.CredentialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CredentialTypes", "conf");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ingreso por AD bajo dominio Finanzauto",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "FzDomain"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ingreso por AD bajo dominio Promotec",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "PtDomain"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ingreso por ApiKey",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "ApiKey"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ingreso por Usuario y Contaseña",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "PassWord"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Description = "Ingreso por AD bajo dominio Asisya",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "AsDomain"
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId", "Name")
                        .IsUnique();

                    b.ToTable("Roles", "auth");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Comercial"
                        },
                        new
                        {
                            Id = new Guid("89789f4a-570d-451d-b99b-69127421f1fe"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Operaciones"
                        },
                        new
                        {
                            Id = new Guid("228ee2e2-843e-47cc-98ff-ae78e52340b7"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Administrador"
                        },
                        new
                        {
                            Id = new Guid("8c187a8e-a65a-45a1-a29b-49c99e1b3cff"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "GRC"
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ClaimId");

                    b.HasIndex("RoleId", "ClaimId")
                        .IsUnique();

                    b.ToTable("RoleClaims", "auth");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimId = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68")
                        },
                        new
                        {
                            Id = 2,
                            ClaimId = 2,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68")
                        },
                        new
                        {
                            Id = 3,
                            ClaimId = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleId = new Guid("89789f4a-570d-451d-b99b-69127421f1fe")
                        },
                        new
                        {
                            Id = 4,
                            ClaimId = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleId = new Guid("8c187a8e-a65a-45a1-a29b-49c99e1b3cff")
                        },
                        new
                        {
                            Id = 5,
                            ClaimId = 4,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            RoleId = new Guid("228ee2e2-843e-47cc-98ff-ae78e52340b7")
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.RoleRoute", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<int?>("CreateClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DownloadClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("EditClaimId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ReadClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecialConditionClaimId")
                        .HasColumnType("int");

                    b.Property<int?>("StatusClaimId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "RouteId");

                    b.HasIndex("CreateClaimId");

                    b.HasIndex("DownloadClaimId");

                    b.HasIndex("EditClaimId");

                    b.HasIndex("ReadClaimId");

                    b.HasIndex("RouteId");

                    b.HasIndex("SpecialConditionClaimId");

                    b.HasIndex("StatusClaimId");

                    b.ToTable("RoleRoutes", "conf");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68"),
                            RouteId = 1,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ReadClaimId = 2
                        },
                        new
                        {
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68"),
                            RouteId = 2,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68"),
                            RouteId = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ReadClaimId = 1
                        },
                        new
                        {
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68"),
                            RouteId = 4,
                            CreateClaimId = 3,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            EditClaimId = 4,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ReadClaimId = 2
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplitionId")
                        .HasColumnType("int");

                    b.Property<string>("Component")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("ExcludeNav")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("ApplitionId", "Name")
                        .IsUnique();

                    b.ToTable("Routes", "conf");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplitionId = 7,
                            Component = "your-requests",
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ExcludeNav = true,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Tus Solicitudes",
                            Order = 0,
                            Path = "/your-requests",
                            UrlImg = ""
                        },
                        new
                        {
                            Id = 2,
                            ApplitionId = 7,
                            Component = "home",
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ExcludeNav = true,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Inicio",
                            Order = 0,
                            Path = "/",
                            UrlImg = ""
                        },
                        new
                        {
                            Id = 3,
                            ApplitionId = 7,
                            Component = "request-client-detail",
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ExcludeNav = true,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Detalle del cliente",
                            Order = 0,
                            Path = "/your-requests/request-client-detail/:requestId",
                            UrlImg = ""
                        },
                        new
                        {
                            Id = 4,
                            ApplitionId = 7,
                            Component = "credit-filing",
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            ExcludeNav = true,
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Radicación de crédito",
                            Order = 0,
                            Path = "/credit-filing",
                            UrlImg = ""
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("IdentificationNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrincipalEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PrincipalEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PrincipalPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("PrincipalPhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("IdentificationNumber")
                        .IsUnique();

                    b.HasIndex("PrincipalEmail")
                        .IsUnique();

                    b.HasIndex("PrincipalPhoneNumber")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", "auth");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ea12c28-b655-41e6-be6c-ed56c781d30b"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "1030692232",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Jhon Sebastian",
                            PrincipalEmail = "jhon.cubillos@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "3239336050",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Cubillos Gonzalez",
                            Username = "jhon.cubillos"
                        },
                        new
                        {
                            Id = new Guid("3181c2ed-7454-4c71-99a9-0797daa0f32d"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000000",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Darcy",
                            PrincipalEmail = "darcy.novoa@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000000",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Novoa",
                            Username = "darcy.novoa"
                        },
                        new
                        {
                            Id = new Guid("f465489e-f743-40c2-8585-3ebdc982ac5e"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000001",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Jesus",
                            PrincipalEmail = "jesus.perez@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000001",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Perez",
                            Username = "jesus.perez"
                        },
                        new
                        {
                            Id = new Guid("71e13750-87bb-40a7-bb93-58e8f603b1a7"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000002",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Elizabeth",
                            PrincipalEmail = "elizabeth.gamba@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000002",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Gamba",
                            Username = "elizabeth.gamba"
                        },
                        new
                        {
                            Id = new Guid("e81ccb87-d2e0-4609-8d0b-63989625c7e9"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000003",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Jose",
                            PrincipalEmail = "jose.bernal@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000003",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Bernal",
                            Username = "jose.bernal"
                        },
                        new
                        {
                            Id = new Guid("0622f38d-f7c9-41a2-9b80-7f77ea6ba7d7"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000004",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Johanna Andrea",
                            PrincipalEmail = "johanna.riano@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000004",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Riaño Chaparro",
                            Username = "johanna.riano"
                        },
                        new
                        {
                            Id = new Guid("aa6a6abd-4c02-45ee-92e4-9ad4cc31169c"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000005",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Christian David",
                            PrincipalEmail = "christian.chilatra@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "3222264771",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Chilatra Mendez",
                            Username = "christian.chilatra"
                        },
                        new
                        {
                            Id = new Guid("aae0504e-8145-461f-a7ab-9f9621e387d6"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000006",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Jeymmy Nataly",
                            PrincipalEmail = "jeymmy.camelo@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000006",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Camelo Santa",
                            Username = "jeymmy.camelo"
                        },
                        new
                        {
                            Id = new Guid("134ab661-2928-44e8-9e0c-b96d70e8164c"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000007",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Carlos",
                            PrincipalEmail = "carlos.molano@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000007",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Molano",
                            Username = "carlos.molano"
                        },
                        new
                        {
                            Id = new Guid("8d7e4c06-16d7-4448-b145-bda5f1af0776"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000008",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Laura",
                            PrincipalEmail = "laura.roa@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "3222218468",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Roa",
                            Username = "laura.roa"
                        },
                        new
                        {
                            Id = new Guid("d7d52b73-842a-4e8f-a090-f5c4a22fe625"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IdentificationNumber = "0000000009",
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            Name = "Monica",
                            PrincipalEmail = "monica.infante@finanzauto.com.co",
                            PrincipalEmailConfirmed = false,
                            PrincipalPhoneNumber = "0000000005",
                            PrincipalPhoneNumberConfirmed = false,
                            Surname = "Infante",
                            Username = "monica.infante"
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.UserApplication", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "ApplicationId");

                    b.HasIndex("ApplicationId");

                    b.ToTable("UserApplications", "conf");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("5ea12c28-b655-41e6-be6c-ed56c781d30b"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            UserId = new Guid("f465489e-f743-40c2-8585-3ebdc982ac5e"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            UserId = new Guid("aa6a6abd-4c02-45ee-92e4-9ad4cc31169c"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            UserId = new Guid("8d7e4c06-16d7-4448-b145-bda5f1af0776"),
                            ApplicationId = 7,
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("int");

                    b.Property<int>("ClaimId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId");

                    b.HasIndex("ClaimId");

                    b.HasIndex("UserId", "ClaimId", "ApplicationId")
                        .IsUnique();

                    b.ToTable("UserClaims", "auth");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<Guid>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValue(new Guid("00000000-0000-0000-0000-000000000000"));

                    b.Property<DateTime?>("DeletedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DeletedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModifiedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", "auth");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("5ea12c28-b655-41e6-be6c-ed56c781d30b"),
                            RoleId = new Guid("228ee2e2-843e-47cc-98ff-ae78e52340b7"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            UserId = new Guid("f465489e-f743-40c2-8585-3ebdc982ac5e"),
                            RoleId = new Guid("07fcaa8e-7062-4c31-b582-8285784afd68"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            UserId = new Guid("aa6a6abd-4c02-45ee-92e4-9ad4cc31169c"),
                            RoleId = new Guid("89789f4a-570d-451d-b99b-69127421f1fe"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            UserId = new Guid("8d7e4c06-16d7-4448-b145-bda5f1af0776"),
                            RoleId = new Guid("8c187a8e-a65a-45a1-a29b-49c99e1b3cff"),
                            CreatedAtUtc = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DeletedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            IsDeleted = false,
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.AllowedCredential", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Application", "Application")
                        .WithMany("AllowedCredentials")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.CredentialType", "CredentialType")
                        .WithMany("AllowedCredentials")
                        .HasForeignKey("CredentialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("CredentialType");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Claim", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.ClaimType", "ClaimType")
                        .WithMany("Claims")
                        .HasForeignKey("CalimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("ClaimType");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Credential", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.CredentialType", "CredentialType")
                        .WithMany("Credentials")
                        .HasForeignKey("CredentialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.User", "User")
                        .WithMany("Credentials")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CredentialType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Role", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Application", "Application")
                        .WithMany("Roles")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.RoleClaim", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "Claim")
                        .WithMany("RoleClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Claim");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.RoleRoute", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "CreateClaim")
                        .WithMany("CreateRoutes")
                        .HasForeignKey("CreateClaimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "DownloadClaim")
                        .WithMany("DownloadRoutes")
                        .HasForeignKey("DownloadClaimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "EditClaim")
                        .WithMany("EditRoutes")
                        .HasForeignKey("EditClaimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "ReadClaim")
                        .WithMany("ReadRoutes")
                        .HasForeignKey("ReadClaimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Fz.Identity.Api.Database.Entities.Role", "Role")
                        .WithMany("Routes")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.Route", "Route")
                        .WithMany("Roles")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "SpecialConditionClaim")
                        .WithMany("SpecialConditionRoutes")
                        .HasForeignKey("SpecialConditionClaimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "StatusClaim")
                        .WithMany("StatusRoutes")
                        .HasForeignKey("StatusClaimId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreateClaim");

                    b.Navigation("DownloadClaim");

                    b.Navigation("EditClaim");

                    b.Navigation("ReadClaim");

                    b.Navigation("Role");

                    b.Navigation("Route");

                    b.Navigation("SpecialConditionClaim");

                    b.Navigation("StatusClaim");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Route", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Application", "Application")
                        .WithMany("Routes")
                        .HasForeignKey("ApplitionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.Route", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Application");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.UserApplication", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Application", "Application")
                        .WithMany("Users")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.User", "User")
                        .WithMany("Applications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.UserClaim", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Application", "Application")
                        .WithMany("UserClaims")
                        .HasForeignKey("ApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.Claim", "Claim")
                        .WithMany("UserClaims")
                        .HasForeignKey("ClaimId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("Claim");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.UserRole", b =>
                {
                    b.HasOne("Fz.Identity.Api.Database.Entities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fz.Identity.Api.Database.Entities.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Application", b =>
                {
                    b.Navigation("AllowedCredentials");

                    b.Navigation("Roles");

                    b.Navigation("Routes");

                    b.Navigation("UserClaims");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Claim", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("CreateRoutes");

                    b.Navigation("DownloadRoutes");

                    b.Navigation("EditRoutes");

                    b.Navigation("ReadRoutes");

                    b.Navigation("RoleClaims");

                    b.Navigation("SpecialConditionRoutes");

                    b.Navigation("StatusRoutes");

                    b.Navigation("UserClaims");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.ClaimType", b =>
                {
                    b.Navigation("Claims");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.CredentialType", b =>
                {
                    b.Navigation("AllowedCredentials");

                    b.Navigation("Credentials");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Role", b =>
                {
                    b.Navigation("RoleClaims");

                    b.Navigation("Routes");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.Route", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Fz.Identity.Api.Database.Entities.User", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Credentials");

                    b.Navigation("Roles");

                    b.Navigation("UserClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
